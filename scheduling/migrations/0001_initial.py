# Generated by Django 5.1.3 on 2024-12-03 04:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Pabellon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('CIRUGIA_MAYOR', 'Cirugía Mayor'), ('CIRUGIA_MAYOR_COMPLEJA', 'Cirugía Mayor Compleja'), ('MATERNIDAD_GINECOLOGIA', 'Maternidad/Ginecología'), ('CIRUGIA_AMBULATORIA', 'Cirugía Ambulatoria'), ('HEMODINAMIA', 'Hemodinamia')], max_length=30)),
                ('estado', models.CharField(choices=[('OCUPADO', 'Ocupado'), ('DESOCUPADO', 'Desocupado'), ('LIMPIEZA', 'Limpieza')], default='DESOCUPADO', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('NURSE', 'Nurse'), ('DOCTOR', 'Doctor'), ('AUXILIAR', 'Auxiliar'), ('ARSENALERO', 'Arsenalero/a'), ('PABELLONERO', 'Pabellonero/a'), ('TECNICO_ANESTESIA', 'Técnico/a de Anestesia'), ('ANESTESISTA', 'Anestesista')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_name', models.CharField(max_length=100, verbose_name='Nombre del Paciente')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('description', models.TextField()),
                ('anesthetist', models.ForeignKey(limit_choices_to={'role': 'ANESTESISTA'}, on_delete=django.db.models.deletion.CASCADE, related_name='anestesista', to=settings.AUTH_USER_MODEL)),
                ('arsenalero', models.ForeignKey(limit_choices_to={'role': 'ARSENALERO'}, on_delete=django.db.models.deletion.CASCADE, related_name='arsenalero', to=settings.AUTH_USER_MODEL)),
                ('nurse', models.ForeignKey(limit_choices_to={'role': 'NURSE'}, on_delete=django.db.models.deletion.CASCADE, related_name='enfermera', to=settings.AUTH_USER_MODEL)),
                ('pabellon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='scheduling.pabellon')),
                ('pabellonero', models.ForeignKey(limit_choices_to={'role': 'PABELLONERO'}, on_delete=django.db.models.deletion.CASCADE, related_name='pabellonero', to=settings.AUTH_USER_MODEL)),
                ('surgeon', models.ForeignKey(limit_choices_to={'role': 'DOCTOR'}, on_delete=django.db.models.deletion.CASCADE, related_name='cirujano', to=settings.AUTH_USER_MODEL)),
                ('tecnico_anestesia', models.ForeignKey(limit_choices_to={'role': 'TECNICO_ANESTESIA'}, on_delete=django.db.models.deletion.CASCADE, related_name='tecnico_anestesia', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
